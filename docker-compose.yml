version: "3.8"

services:
  mysqldb:
    platform: linux/arm64 # for macOS M1 chips
    image: mysql:8
    container_name: mysqldb
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    entrypoint:
      sh -c "
      echo 'CREATE DATABASE IF NOT EXISTS ${LIKE_SERVICE_DATABASE}; CREATE DATABASE IF NOT EXISTS ${MYSQLDB_DATABASE};' > /docker-entrypoint-initdb.d/init.sql;
      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      "
    volumes:
      - microservices-db:/var/lib/mysql

  adminer:
    image: adminer
    restart: always
    ports:
      - 9000:8080

  account-service:
    depends_on:
      - mysqldb
    build: ./AccountService
    restart: on-failure
    container_name: account-service
    env_file: ./.env
    ports:
      - $ACCOUNT_SERVICE_PORT:$ACCOUNT_SERVICE_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
        }'
    # volumes:
    #   - .m2:/root/.m2
    stdin_open: true
    tty: true

  like-service:
    depends_on:
      - mysqldb
    build: ./LikeService
    restart: on-failure
    container_name: like-service
    env_file: ./.env
    ports:
      - $LIKE_SERVICE_PORT:$LIKE_SERVICE_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$LIKE_SERVICE_DATABASE?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
        }'
    stdin_open: true
    tty: true

  # vueapp:
  #   depends_on:
  #     - mysqldb
  #   build: ./Pages/twitter-clone
  #   ports:
  #     - "8081:8081"
  #   volumes:
  #     - ./Pages/twitter-clone/src:/usr/src/app/src
  #     - ./Pages/twitter-clone/public:/usr/src/app/public
  #   container_name: vueapp
  
  post-service:
    depends_on:
      - mysqldb
    build: ./PostService
    restart: on-failure
    container_name: post-service
    env_file: ./.env
    ports:
      - $FLASK_LOCAL_PORT:$FLASK_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - ./PostService/src:/usr/src/app/src
  
  redis-server:
    container_name: redis-server
    image: redis
    ports:
      - "6379:6379"

volumes:
  microservices-db: